data2$Species[grepl("Blue", data2$Species, ignore.case = TRUE)] <- "Blue shark"
data2$Species[grepl("Silky", data2$Species, ignore.case = TRUE)] <- "Silky shark"
data2$Species[grepl("Reef", data2$Species, ignore.case = TRUE)] <- "Reef shark"
data2$Species[grepl("Salmon", data2$Species, ignore.case = TRUE)] <- "Salmon shark"
shark_species <- c("Great white shark", "Tiger shark", "Bull shark", "Nurse shark",
"Blacktip shark", "Mako shark", "Hammerhead shark", "Spinner shark",
"Leopard shark", "Sandbar shark", "Sevengill shark", "Shovelnose shark",
"sand shark", "Lemon shark", "Blue shark", "Silky shark", "Reef shark","Salmon shark")
# Convert the data2$Species vector to lowercase for case-insensitive comparison
data2$Species <- iconv(na.omit(data2$Species), to = "ASCII//TRANSLIT")
data2$Species <- tolower(data2$Species)
# Function to check if any substring from shark_species is present in the input string
check_substring <- function(x) {
any(grepl(paste(shark_species, collapse = "|"), x, ignore.case = TRUE))
}
# Apply the check_substring function to each row of the "Species" column
keep_rows <- apply(data2, 1, function(row) check_substring(row["Species"]))
# Subset the data frame to keep only the rows with at least one valid substring
data2 <- data2[keep_rows, ]
# If needed, convert the data2$Species back to title case (optional)
data2$Species <- tools::toTitleCase(data2$Species)
shark_vec <- unlist(data2$Species)
invisible(shark_table <- table(shark_vec))
shark_table <- as.data.frame(shark_table)
shark_table <- shark_table %>% arrange(desc(Freq))
# Assuming you have a data frame named shark_table with columns "shark_vec" and "Freq"
# Create a copy of the shark_table data frame
shark_table_modified <- shark_table
# Create a pie chart with different colors for each species
ggplot(shark_table_modified, aes(x = "", y = Freq, fill = shark_vec)) +
geom_bar(stat = "identity", width = 1, color = "white") +
coord_polar(theta = "y") +
scale_fill_discrete() +  # Use different colors for each species
labs(title = "Proportion of Cumulative Attacks from Specific Shark Species",
x = NULL,
y = NULL,
fill = "Shark Species") +
theme_void() +
theme(legend.position = "right")
# Assuming you have a data frame named data2 with columns "Area" and "Species"
# Calculate the most frequently occurring attacking shark species for each area
most_common_attacker <- data2 %>%
group_by(Area, Species) %>%
summarize(Frequency = n(), .groups = 'drop') %>%
arrange(Area, desc(Frequency)) %>%
group_by(Area) %>%
slice(1) %>%
ungroup()
# Custom color palette with more colors
species_colors <- c("#66c2a5", "#fc8d62", "#8da0cb", "#e78ac3", "#a6d854",
"#ffd92f", "#e5c494", "#b3b3b3", "#1f78b4", "#33a02c",
"#984ea3", "#ff7f00", "#cab2d6", "#6a3d9a", "#fb9a99",
"#fdbf6f", "#b15928", "#ffff99")
# Create a bar plot showing the most common attacking shark species for each area
ggplot(data = most_common_attacker, aes(x = Area, y = Frequency, fill = Species)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = species_colors) +
labs(title = "Most Common Attacking Shark Species in Each Area",
x = "Area",
y = "Frequency") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
#who is the shark that attacks the most in Florida?
library(ggplot2)
library(dplyr)
# Assuming you have a data frame named data2 with columns "Area" and "Species"
data3 <- data2 %>% filter(Area == "Florida")
shark_vec2 <- unlist(data3$Species)
shark_table2 <- table(shark_vec2)
shark_table2 <- as.data.frame(shark_table2)
shark_table2 <- shark_table2 %>%
arrange(desc(Freq))
# Create a more visually appealing bar plot with a different color palette
ggplot(shark_table2, aes(x = reorder(shark_vec2, -Freq), y = Freq, fill = shark_vec2)) +
geom_bar(stat = "identity") +
labs(title = "Frequency of Shark Species in Florida",
x = "Shark Species",
y = "Frequency") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(legend.position = "none") +  # Hide the legend for individual bars
scale_fill_viridis_d(option = "D", begin = 0.3, end = 0.8)  # Use the Category20 color palette
#who is the shark that attacks the most in California ?
library(ggplot2)
library(dplyr)
# Assuming you have a data frame named data2 with columns "Area" and "Species"
data4 <- data2 %>% filter(Area == "California")
shark_vec3 <- unlist(data4$Species)
shark_table3 <- table(shark_vec3)
shark_table3 <- as.data.frame(shark_table3)
shark_table3 <- shark_table3 %>%
arrange(desc(Freq))
# Create a horizontal bar plot
ggplot(shark_table3, aes(x = Freq, y = reorder(shark_vec3, Freq), fill = shark_vec3)) +
geom_bar(stat = "identity") +
labs(title = "Frequency of Shark Species in California",
x = "Frequency",
y = "Shark Species") +
theme_minimal() +
theme(axis.text.y = element_text(hjust = 0)) +
scale_fill_brewer(palette = "Set3")
data5 <-data
data5 <- subset(data5, !is.na(Activity) & Activity != "")
data5$Activity[grepl("Swimming", data5$Activity, ignore.case = TRUE)] <- "Swimming"
data5$Activity[grepl("Kitesurfing", data5$Activity, ignore.case = TRUE)] <- "Surfing"
data5$Activity[grepl("Boating", data5$Activity, ignore.case = TRUE)] <- "Boating"
data5$Activity[grepl("Hunting", data5$Activity, ignore.case = TRUE)] <- "Hunting or fishing"
data5$Activity[grepl("Fishing", data5$Activity, ignore.case = TRUE)] <- "Hunting or fishing"
data5$Activity[grepl("Surfing", data5$Activity, ignore.case = TRUE)] <- "Surfing"
data5$Activity[grepl("diving", data5$Activity, ignore.case = TRUE)] <- "Scuba diving"
data5$Activity[grepl("Body boarding", data5$Activity, ignore.case = TRUE)] <- "Surfing"
data5$Activity[grepl("Playing", data5$Activity, ignore.case = TRUE)] <- "Bathing"
data5$Activity[grepl("bathing", data5$Activity, ignore.case = TRUE)] <- "Bathing"
data5$Activity[grepl("Snorkeling", data5$Activity, ignore.case = TRUE)] <- "Scuba diving"
data5$Activity[grepl("Wading", data5$Activity, ignore.case = TRUE)] <- "bathing"
data5$Activity[grepl("Killing", data5$Activity, ignore.case = TRUE)] <- "Hunting or fishing"
data5$Activity[grepl("tagging", data5$Activity, ignore.case = TRUE)] <- "An attack during research"
data5$Activity[grepl("Shooting", data5$Activity, ignore.case = TRUE)] <- "Hunting or fishing"
data5$Activity[grepl("paddling", data5$Activity, ignore.case = TRUE)] <- "Surfing"
data5$Activity[grepl("Walking", data5$Activity, ignore.case = TRUE)] <- "Bathing"
data5$Activity[grepl("Boat", data5$Activity, ignore.case = TRUE)] <- "Boating"
vec <- c("Swimming","Surfing","Boating","Hunting or fishing","Scuba diving","bathing","An attack during research")
data5$Activity <- ifelse(data5$Activity %in% vec, data5$Activity, "Other")
unique_activities <- unique(data5$Activity)
activity_vec <- unlist(data5$Activity)
activity_table <- table(activity_vec)
activity_table <- as.data.frame(activity_table)
activity_table <- activity_table %>% arrange(desc(Freq))
# Assuming you have your own activity_table with columns "activity_vec" and "Freq"
# Calculate percentages and cumulative percentages
activity_table$fraction = activity_table$Freq / sum(activity_table$Freq)
activity_table$ymax = cumsum(activity_table$fraction)
activity_table$ymin = c(0, head(activity_table$ymax, n = -1))
# Create the donut plot
donut_plot <- ggplot(activity_table, aes(ymax = ymax, ymin = ymin, xmax = 4, xmin = 3, fill = activity_vec)) +
geom_rect() +
coord_polar(theta = "y") +
xlim(c(2, 4)) +
labs(title = "frequency of Shark Attacks during the activity ",
fill = "Activity",
caption = paste("Total:", sum(activity_table$Freq))) +
theme_void() +
theme(legend.position = "right")
# Show the donut plot
print(donut_plot)
data7 <- data2
data7 <- subset(data7, !is.na(Activity) & Activity != "")
data7$Activity[grepl("Swimming", data7$Activity, ignore.case = TRUE)] <- "Swimming"
data7$Activity[grepl("Kitesurfing", data7$Activity, ignore.case = TRUE)] <- "Surfing"
data7$Activity[grepl("Boating", data7$Activity, ignore.case = TRUE)] <- "Boating"
data7$Activity[grepl("Hunting", data7$Activity, ignore.case = TRUE)] <- "Hunting or fishing"
data7$Activity[grepl("Fishing", data7$Activity, ignore.case = TRUE)] <- "Hunting or fishing"
data7$Activity[grepl("Surfing", data7$Activity, ignore.case = TRUE)] <- "Surfing"
data7$Activity[grepl("diving", data7$Activity, ignore.case = TRUE)] <- "Scuba diving"
data7$Activity[grepl("Body boarding", data7$Activity, ignore.case = TRUE)] <- "Surfing"
data7$Activity[grepl("Playing", data7$Activity, ignore.case = TRUE)] <- "Bathing"
data7$Activity[grepl("bathing", data7$Activity, ignore.case = TRUE)] <- "Bathing"
data7$Activity[grepl("Snorkeling", data7$Activity, ignore.case = TRUE)] <- "Scuba diving"
data7$Activity[grepl("Wading", data7$Activity, ignore.case = TRUE)] <- "bathing"
data7$Activity[grepl("Killing", data7$Activity, ignore.case = TRUE)] <- "Hunting or fishing"
data7$Activity[grepl("tagging", data7$Activity, ignore.case = TRUE)] <- "An attack during research"
data7$Activity[grepl("Shooting", data7$Activity, ignore.case = TRUE)] <- "Hunting or fishing"
data7$Activity[grepl("paddling", data7$Activity, ignore.case = TRUE)] <- "Surfing"
data7$Activity[grepl("Walking", data7$Activity, ignore.case = TRUE)] <- "Bathing"
data7$Activity[grepl("Boat", data7$Activity, ignore.case = TRUE)] <- "Boating"
vec <- c("Swimming","Surfing","Boating","Hunting or fishing","Scuba diving","bathing","An attack during research")
data7$Activity <- ifelse(data7$Activity %in% vec, data7$Activity, "Other")
# Assuming you have a data frame named data7 with columns "Activity" and "Species"
# Calculate the frequency of each shark species for each activity
species_activity_freq <- data7 %>%
group_by(Activity, Species) %>%
summarize(Frequency = n(), .groups = 'drop') %>%
ungroup()
# Create a color palette for distinct species
color_palette <- scales::hue_pal()(length(unique(species_activity_freq$Species)))
# Create a bar plot showing the frequency of shark species for each activity
ggplot(data = species_activity_freq, aes(x = Activity, y = Frequency, fill = Species)) +
geom_bar(stat = "identity") +
labs(title = "Shark Species Frequency for Each Activity",
x = "Activity",
y = "Frequency") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_manual(values = color_palette)
# Assuming your data frame is named 'data'
shark_attacks_df <- subset(data, !is.na(Time))
shark_attacks_df <- shark_attacks_df %>%
mutate(Time_Category = case_when(
is.na(Time) | Time == "" | !grepl("^\\d\\d[hH]\\d\\d$", Time) ~ Time,
between(as.numeric(substr(Time, 1, 2)), 5, 11) ~ "morning",
between(as.numeric(substr(Time, 1, 2)), 12, 15) ~ "noon",
between(as.numeric(substr(Time, 1, 2)), 16, 18) ~ "afternoon",
between(as.numeric(substr(Time, 1, 2)), 19, 23) ~ "evening",
TRUE ~ "night"
))
# Modify specific values in the Time_Category column
shark_attacks_df <- shark_attacks_df %>%
mutate(Time_Category = case_when(
Time_Category %in% c(
"10h45-11h15", "07h00 - 08h00", "Morning", "Early Morning",
"10h00 / 11h00", "08h00 / 09h30", "Morning ", "Just before noon",
"11h115", "Early morning", "Sunset", "8:04 pm", "Mid morning",
"Prior to 10h37", "Daybreak", "Mid-morning", "\"Just before 11h00\"",
">06h45", "<07h30", "09h30 ", "11h30 ", "Shortly before 13h00",
"09h30 / 10h00", "Between 05h00 and 08h00", "   ",
" 14h00", "\"After lunch\"", "12h45 / 13h45", "1300", "15j45",
"Noon", "14h00  -15h00", "13h345", "14h00 - 15h00", "15h00j",
"14h30 / 15h30"
) ~ "morning",
Time_Category %in% c(" 14h00", "\"After lunch\"", "12h45 / 13h45",
"1300", "15j45", "Noon", "14h00  -15h00",
"13h345", "14h00 - 15h00", "15h00j") ~ "noon",
Time_Category %in% c("After noon", "Early afternoon", "1600",
"18h30?", "Late afternon", "Late Afternoon",
"18h15-18h30", "Afternoon") ~ "afternoon",
Time_Category %in% c("Evening", "Dusk", "Late afternoon",
"Just before sundown") ~ "evening",
Time_Category %in% c("Night", "03h45 - 04h00", "Shortly after midnight",
"\"Night\"", "Midnight") ~ "night",
TRUE ~ Time_Category
)) %>%
filter(!Time_Category %in% c("09h30 / 15h30", "10h30 or 13h30",
"10h00 or 14h00", " ", "--", "P.M.", "X", "A.M.",
"Possibly same incident as 2000.08.21", ""))
day_vec <- unlist(shark_attacks_df$Time_Category)
invisible(day_table <- table(day_vec))
day_table <- as.data.frame(day_table)
day_table <- day_table %>% arrange(desc(Freq))
# Define the desired order of 'day_vec' levels
desired_order <- c("morning", "noon", "afternoon", "evening", "night")
# Reorder the levels of 'day_vec' factor
day_table$day_vec <- factor(day_table$day_vec, levels = desired_order)
# Define your custom color palette
color_palette <- c("morning" = "blue", "noon" = "green", "afternoon" = "orange", "evening" = "purple", "night" = "black")
# Create a lollipop plot using ggplot
ggplot(day_table, aes(x = day_vec, y = Freq)) +
geom_segment(aes(xend = day_vec, yend = 0), color = "gray") +
geom_point(aes(color = day_vec), size = 3, position = position_dodge(width = 0.5)) +
scale_color_manual(values = color_palette) +
labs(title = "Attacks Frequency by Daytime",
x = "Daytime",
y = "Frequency") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "none")
# Assuming your data frame is named 'shark_attacks_df'
# Replace this with the actual name of your data frame
# Step 1: Count the number of fatal attacks
fatal_attacks_count <- sum(data$Fatal..Y.N. == "Y")
# Step 2: Count the total number of attacks
total_attacks_count <- nrow(data)
# Step 3: Calculate the empirical probability of getting killed
empirical_probability <- fatal_attacks_count / total_attacks_count
empirical_probability <- round(empirical_probability,3)
print(paste("Empirical Probability of Getting Killed by a Shark:", empirical_probability))
# Assuming your data frame is named data2
# Calculate empirical probabilities for all shark species
species_probabilities <- data2 %>%
group_by(Species) %>%
summarize(empirical_probability = sum(Fatal..Y.N. == "Y") / n())
# Create a bar plot
ggplot(species_probabilities, aes(x = reorder(Species, -empirical_probability), y = empirical_probability)) +
geom_bar(stat = "identity", fill = "dodgerblue") +
theme_minimal() +
coord_flip() +
labs(x = "Shark Species", y = "Empirical Probability of Fatal Attacks",
title = "Empirical Probability of Fatal Attacks by Shark Species")
data9<-data
filtered_data <- data9[data9$Fatal..Y.N. == "Y", ]
filtered_data <- filtered_data[filtered_data$Year >= 1960 & filtered_data$Fatal..Y.N. == "Y",]
year_counts <- filtered_data %>%
group_by(Year) %>%
summarize(Count = n())
# Create a bar plot with a built-in color scale
ggplot(year_counts, aes(x = factor(Year), y = Count, fill = factor(Year))) +
geom_bar(stat = "identity") +
labs(title = "Occurrences of Each Year",
x = "Year",
y = "Count") +
scale_fill_viridis_d() +  # Use a built-in color scale
theme_minimal() +
scale_x_discrete(breaks = unique(year_counts$Year[seq(1, nrow(year_counts), by = 2)]))
# Create a copy of the shark_table data frame
shark_table_modified <- shark_table
# Calculate the percentages
shark_table_modified$percentage <- (shark_table_modified$Freq / sum(shark_table_modified$Freq)) * 100
# Sort the data frame by percentage in descending order
shark_table_modified <- shark_table_modified[order(-shark_table_modified$percentage), ]
# Create a pie chart with different colors for each species
p <- ggplot(shark_table_modified, aes(x = "", y = Freq, fill = shark_vec)) +
geom_bar(stat = "identity", width = 1, color = "white") +
coord_polar(theta = "y") +
scale_fill_discrete() +  # Use different colors for each species
labs(title = "Proportion of Cumulative Attacks from All Shark Species",
x = NULL,
y = NULL,
fill = "Shark Species") +
theme_void() +
theme(legend.position = "right")
# Add percentages as labels for the top 7 species
top7_labels <- shark_table_modified[1:7, ]
p + geom_text(data = top7_labels, aes(label = paste(round(percentage, 1), "%")), position = position_stack(vjust = 0.5))
# Create a copy of the shark_table data frame
shark_table_modified <- shark_table
# Calculate the percentages
shark_table_modified$percentage <- (shark_table_modified$Freq / sum(shark_table_modified$Freq)) * 100
# Sort the data frame by percentage in descending order
shark_table_modified <- shark_table_modified[order(-shark_table_modified$percentage), ]
# Create a pie chart with different colors for each species
p <- ggplot(shark_table_modified, aes(x = "", y = Freq, fill = shark_vec)) +
geom_bar(stat = "identity", width = 1, color = "white") +
coord_polar(theta = "y") +
scale_fill_discrete() +  # Use different colors for each species
labs(title = "Proportion of Cumulative Attacks from All Shark Species",
x = NULL,
y = NULL,
fill = "Shark Species") +
theme_void() +
theme(legend.position = "right")
# Calculate the threshold for the top 7
threshold <- shark_table_modified$percentage[7]
# Add percentages as labels only for the top 7 species
top7_labels <- shark_table_modified[shark_table_modified$percentage >= threshold, ]
p + geom_text(data = top7_labels, aes(label = paste(round(percentage, 1), "%")), position = position_stack(vjust = 0.5))
# Create a copy of the shark_table data frame
shark_table_modified <- shark_table
# Calculate the percentages
shark_table_modified$percentage <- (shark_table_modified$Freq / sum(shark_table_modified$Freq)) * 100
# Sort the data frame by percentage in descending order
shark_table_modified <- shark_table_modified[order(-shark_table_modified$percentage), ]
# Create a pie chart with different colors for each species
p <- ggplot(shark_table_modified, aes(x = "", y = Freq, fill = shark_vec)) +
geom_bar(stat = "identity", width = 1, color = "white") +
coord_polar(theta = "y") +
scale_fill_discrete() +  # Use different colors for each species
labs(title = "Proportion of Cumulative Attacks from All Shark Species",
x = NULL,
y = NULL,
fill = "Shark Species") +
theme_void() +
theme(legend.position = "right")
# Calculate the threshold for the top 7
threshold <- shark_table_modified$percentage[7]
# Add percentages as labels only for the top 7 species
top7_labels <- shark_table_modified[shark_table_modified$percentage >= threshold, ]
p + geom_text(data = top7_labels, aes(label = ifelse(shark_vec == "Great White", "", paste(round(percentage, 1), "%"))), position = position_stack(vjust = 0.5))
# Create a copy of the shark_table data frame
shark_table_modified <- shark_table
# Calculate the percentages
shark_table_modified$percentage <- (shark_table_modified$Freq / sum(shark_table_modified$Freq)) * 100
# Sort the data frame by percentage in descending order
shark_table_modified <- shark_table_modified[order(-shark_table_modified$percentage), ]
# Create a pie chart with different colors for each species
p <- ggplot(shark_table_modified, aes(x = "", y = Freq, fill = shark_vec)) +
geom_bar(stat = "identity", width = 1, color = "white") +
coord_polar(theta = "y") +
scale_fill_discrete() +  # Use different colors for each species
labs(title = "Proportion of Cumulative Attacks from All Shark Species",
x = NULL,
y = NULL,
fill = "Shark Species") +
theme_void() +
theme(legend.position = "right")
# Calculate the threshold for the top 7
threshold <- shark_table_modified$percentage[7]
# Add percentages as labels only for the top 7 species
top7_labels <- shark_table_modified[shark_table_modified$percentage >= threshold, ]
p + geom_text(data = top7_labels, aes(label = ifelse(shark_vec == "Great White", "", paste(round(percentage, 1), "%"))), position = position_stack(vjust = 0.5))
# Create a copy of the shark_table data frame
shark_table_modified <- shark_table
# Calculate the percentages
shark_table_modified$percentage <- (shark_table_modified$Freq / sum(shark_table_modified$Freq)) * 100
# Sort the data frame by percentage in descending order
shark_table_modified <- shark_table_modified[order(-shark_table_modified$percentage), ]
# Create a pie chart with different colors for each species
p <- ggplot(shark_table_modified, aes(x = "", y = Freq, fill = shark_vec)) +
geom_bar(stat = "identity", width = 1, color = "white") +
coord_polar(theta = "y") +
scale_fill_discrete() +  # Use different colors for each species
labs(title = "Proportion of Cumulative Attacks from All Shark Species",
x = NULL,
y = NULL,
fill = "Shark Species") +
theme_void() +
theme(legend.position = "right")
# Calculate the threshold for the top 7
threshold <- shark_table_modified$percentage[7]
# Add percentages as labels only for the top 7 species
top7_labels <- shark_table_modified[shark_table_modified$percentage >= threshold, ]
p + geom_text(data = top7_labels, aes(label = ifelse(rank(percentage, ties.method = "first") <= 7, paste(round(percentage, 1), "%"), "")), position = position_stack(vjust = 0.5))
# Create a copy of the shark_table data frame
shark_table_modified <- shark_table
# Calculate the percentages
shark_table_modified$percentage <- (shark_table_modified$Freq / sum(shark_table_modified$Freq)) * 100
# Sort the data frame by percentage in descending order
shark_table_modified <- shark_table_modified[order(-shark_table_modified$percentage), ]
# Create a pie chart with different colors for each species
p <- ggplot(shark_table_modified, aes(x = "", y = Freq, fill = shark_vec)) +
geom_bar(stat = "identity", width = 1, color = "white") +
coord_polar(theta = "y") +
scale_fill_discrete() +  # Use different colors for each species
labs(title = "Proportion of Cumulative Attacks from All Shark Species",
x = NULL,
y = NULL,
fill = "Shark Species") +
theme_void() +
theme(legend.position = "right")
# Calculate the threshold for the top 7
threshold <- shark_table_modified$percentage[7]
# Add percentages as labels only for the top 7 species, and combine the rest as "Other"
shark_table_modified$shark_vec <- ifelse(shark_table_modified$percentage >= threshold,
as.character(shark_table_modified$shark_vec),
"Other")
# Recreate the pie chart with modified labels
p <- ggplot(shark_table_modified, aes(x = "", y = Freq, fill = shark_vec)) +
geom_bar(stat = "identity", width = 1, color = "white") +
coord_polar(theta = "y") +
scale_fill_discrete() +
labs(title = "Proportion of Cumulative Attacks from All Shark Species",
x = NULL,
y = NULL,
fill = "Shark Species") +
geom_text(aes(label = ifelse(shark_vec == "Other", "", paste(round(percentage, 1), "%"))),
position = position_stack(vjust = 0.5)) +
theme_void() +
theme(legend.position = "right")
# Print the updated pie chart
print(p)
# Create a copy of the shark_table data frame
shark_table_modified <- shark_table
# Calculate the percentages
shark_table_modified$percentage <- (shark_table_modified$Freq / sum(shark_table_modified$Freq)) * 100
# Sort the data frame by percentage in descending order
shark_table_modified <- shark_table_modified[order(-shark_table_modified$percentage), ]
# Print a table of shark species and their percentages
print(shark_table_modified[, c("shark_vec", "percentage")])
# Create a copy of the shark_table data frame
shark_table_modified <- shark_table
# Calculate the percentages
shark_table_modified$percentage <- (shark_table_modified$Freq / sum(shark_table_modified$Freq)) * 100
# Sort the data frame by percentage in descending order
shark_table_modified <- shark_table_modified[order(-shark_table_modified$percentage), ]
# Create a pie chart with different colors for each species
p <- ggplot(shark_table_modified, aes(x = "", y = Freq, fill = shark_vec)) +
geom_bar(stat = "identity", width = 1, color = "white") +
coord_polar(theta = "y") +
scale_fill_discrete() +  # Use different colors for each species
labs(title = "Proportion of Cumulative Attacks from All Shark Species",
x = NULL,
y = NULL,
fill = "Shark Species") +
theme_void() +
theme(legend.position = "right")
# Calculate the threshold for the top 7
threshold <- shark_table_modified$percentage[7]
# Add percentages as labels only for the top 7 species, and combine the rest as "Other"
shark_table_modified$shark_vec <- ifelse(shark_table_modified$percentage >= threshold,
as.character(shark_table_modified$shark_vec),
"Other")
# Recreate the pie chart with modified labels
p <- ggplot(shark_table_modified, aes(x = "", y = Freq, fill = shark_vec)) +
geom_bar(stat = "identity", width = 1, color = "white") +
coord_polar(theta = "y") +
scale_fill_discrete() +
labs(title = "Proportion of Cumulative Attacks from All Shark Species",
x = NULL,
y = NULL,
fill = "Shark Species") +
geom_text(aes(label = ifelse(shark_vec == "Other", "", paste(round(percentage, 1), "%"))),
position = position_stack(vjust = 0.5)) +
theme_void() +
theme(legend.position = "right")
# Print the updated pie chart
print(p)
# Create a copy of the shark_table data frame
shark_table_modified <- shark_table
# Calculate the percentages
shark_table_modified$percentage <- (shark_table_modified$Freq / sum(shark_table_modified$Freq)) * 100
# Sort the data frame by percentage in descending order
shark_table_modified <- shark_table_modified[order(-shark_table_modified$percentage), ]
# Create a pie chart with different colors for each species
p <- ggplot(shark_table_modified, aes(x = "", y = Freq, fill = shark_vec)) +
geom_bar(stat = "identity", width = 1, color = "white") +
coord_polar(theta = "y") +
scale_fill_discrete() +  # Use different colors for each species
labs(title = "Proportion of Cumulative Attacks from All Shark Species",
x = NULL,
y = NULL,
fill = "Shark Species") +
theme_void() +
theme(legend.position = "right")
# Calculate the threshold for the top 7
threshold <- shark_table_modified$percentage[7]
# Add percentages as labels only for the top 7 species, and combine the rest as "Other"
shark_table_modified$shark_vec <- ifelse(shark_table_modified$percentage >= threshold,
as.character(shark_table_modified$shark_vec),
"Other")
# Recreate the pie chart with modified labels
p <- ggplot(shark_table_modified, aes(x = "", y = Freq, fill = shark_vec)) +
geom_bar(stat = "identity", width = 1, color = "white") +
coord_polar(theta = "y") +
scale_fill_discrete() +
labs(title = "Proportion of Cumulative Attacks from All Shark Species",
x = NULL,
y = NULL,
fill = "Shark Species") +
geom_text(aes(label = ifelse(shark_vec == "Other", "", paste(round(percentage, 1), "%"))),
position = position_stack(vjust = 0.5)) +
theme_void() +
theme(legend.position = "right")
# Print the updated pie chart
print(p)
